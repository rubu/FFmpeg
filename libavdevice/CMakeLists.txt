get_library_version(avdevice version.h LIBAVDEVICE_VERSION)

set(AVDEVICE_HEADERS avdevice.h
    version.h
)

set(AVDEVICE_SOURCES alldevices.c
    avdevice.c
    utils.c
)

if (${CONFIG_ALSA_INDEV})
    list(APPEND AVDEVICE_SOURCES alsa_dec.c alsa.c timefilter.c)
endif () 
if (${CONFIG_ALSA_OUTDEV})
    list(APPEND AVDEVICE_SOURCES alsa_enc.c alsa.c)
endif ()
if (${CONFIG_ANDROID_CAMERA_INDEV})
    list(APPEND AVDEVICE_SOURCES android_camera.c)
endif ()
if (${CONFIG_AUDIOTOOLBOX_OUTDEV})
    list(APPEND AVDEVICE_SOURCES audiotoolbox.m)
endif ()
if (${CONFIG_AVFOUNDATION_INDEV})
    list(APPEND AVDEVICE_SOURCES avfoundation.m)
endif () 
if (${CONFIG_BKTR_INDEV})
    list(APPEND AVDEVICE_SOURCES bktr.c)
endif () 
if (${CONFIG_CACA_OUTDEV})
    list(APPEND AVDEVICE_SOURCES caca.c)
endif () 
if (${CONFIG_DECKLINK_OUTDEV})
    list(APPEND AVDEVICE_SOURCES decklink_enc.cpp decklink_enc_c.c decklink_common.cpp)
endif () 
if (${CONFIG_DECKLINK_INDEV})
    list(APPEND AVDEVICE_SOURCES decklink_dec.cpp decklink_dec_c.c decklink_common.cpp)
endif () 
if (${CONFIG_LIBNDI_NEWTEK_OUTDEV})
    list(APPEND AVDEVICE_SOURCES libndi_newtek_enc.c)
endif () 
if (${CONFIG_LIBNDI_NEWTEK_INDEV})
    list(APPEND AVDEVICE_SOURCES libndi_newtek_dec.c)
endif () 
if (${CONFIG_DSHOW_INDEV})
    list(APPEND AVDEVICE_SOURCES dshow_crossbar.c dshow.c dshow_enummediatypes.c dshow_enumpins.c dshow_filter.c dshow_pin.c dshow_common.c)
endif () 
if (${CONFIG_FBDEV_INDEV})
    list(APPEND AVDEVICE_SOURCES fbdev_dec.c fbdev_common.c)
endif () 
if (${CONFIG_FBDEV_OUTDEV})
    list(APPEND AVDEVICE_SOURCES fbdev_enc.c fbdev_common.c)
endif () 
if (${CONFIG_GDIGRAB_INDEV})
    list(APPEND AVDEVICE_SOURCES gdigrab.c)
endif () 
if (${CONFIG_IEC61883_INDEV})
    list(APPEND AVDEVICE_SOURCES iec61883.c)
endif () 
if (${CONFIG_JACK_INDEV})
    list(APPEND AVDEVICE_SOURCES jack.c timefilter.c)
endif () 
if (${CONFIG_KMSGRAB_INDEV})
    list(APPEND AVDEVICE_SOURCES kmsgrab.c)
endif () 
if (${CONFIG_LAVFI_INDEV})
    list(APPEND AVDEVICE_SOURCES lavfi.c)
endif () 
if (${CONFIG_OPENAL_INDEV})
    list(APPEND AVDEVICE_SOURCES openal-dec.c)
endif () 
if (${CONFIG_OPENGL_OUTDEV})
    list(APPEND AVDEVICE_SOURCES opengl_enc.c)
endif () 
if (${CONFIG_OSS_INDEV})
    list(APPEND AVDEVICE_SOURCES oss_dec.c oss.c)
endif () 
if (${CONFIG_OSS_OUTDEV})
    list(APPEND AVDEVICE_SOURCES oss_enc.c oss.c)
endif () 
if (${CONFIG_PULSE_INDEV})
    list(APPEND AVDEVICE_SOURCES pulse_audio_dec.c pulse_audio_common.c timefilter.c)
endif () 
if (${CONFIG_PULSE_OUTDEV})
    list(APPEND AVDEVICE_SOURCES pulse_audio_enc.c pulse_audio_common.c)
endif () 
if (${CONFIG_SDL2_OUTDEV})
    list(APPEND AVDEVICE_SOURCES sdl2.c)
endif () 
if (${CONFIG_SNDIO_INDEV})
    list(APPEND AVDEVICE_SOURCES sndio_dec.c sndio.c)
endif () 
if (${CONFIG_SNDIO_OUTDEV})
    list(APPEND AVDEVICE_SOURCES sndio_enc.c sndio.c)
endif () 
if (${CONFIG_V4L2_INDEV})
    list(APPEND AVDEVICE_SOURCES v4l2.c v4l2-common.c timefilter.c)
endif () 
if (${CONFIG_V4L2_OUTDEV})
    list(APPEND AVDEVICE_SOURCES v4l2enc.c v4l2-common.c)
endif () 
if (${CONFIG_VFWCAP_INDEV})
    list(APPEND AVDEVICE_SOURCES vfwcap.c)
endif () 
if (${CONFIG_XCBGRAB_INDEV})
    list(APPEND AVDEVICE_SOURCES xcbgrab.c)
endif () 
if (${CONFIG_XV_OUTDEV})
    list(APPEND AVDEVICE_SOURCES xv.c)
endif () 
if (${CONFIG_LIBCDIO_INDEV})
    list(APPEND AVDEVICE_SOURCES libcdio.c)
endif () 
if (${CONFIG_LIBDC1394_INDEV})
    list(APPEND AVDEVICE_SOURCES libdc1394.c)
endif () 

add_library(avdevice ${LIBRARY_TYPE} ${AVDEVICE_SOURCES} ${AVDEVICE_HEADERS} ${GENERATED_CONFIG_HEADERS} ${GENERATED_VERSION_HEADERS})
target_link_libraries(avdevice PUBLIC avutil avformat avfilter)
If (WIN32)
    target_link_libraries(avdevice PUBLIC strmiids shlwapi vfw32 crypt32)
endif()
if (APPLE)
    target_link_libraries(avdevice PUBLIC "-framework CoreVideo" "-framework AVFoundation" "-framework CoreMedia" "-framework AudioToolbox -framework CoreAudio")
endif ()
target_include_directories(avdevice PRIVATE ${CMAKE_SOURCE_DIR})
target_compile_definitions(avdevice PUBLIC HAVE_AV_CONFIG_H)

set_target_properties(avdevice PROPERTIES PUBLIC_HEADER "${AVDEVICE_HEADERS}")
set_target_properties(avdevice PROPERTIES RUNTIME_OUTPUT_NAME "avdevice-${LIBAVDEVICE_VERSION}")
install(TARGETS avdevice
    ARCHIVE
    LIBRARY
    PUBLIC_HEADER
        DESTINATION include/libavdevice
    RUNTIME
)
if (WIN32)
    install(FILES $<TARGET_PDB_FILE:${PROJECT_NAME}> DESTINATION bin OPTIONAL)
endif ()